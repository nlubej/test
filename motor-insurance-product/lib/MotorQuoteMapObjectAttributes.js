/* eslint-disable */
// This file was autogenerated from DMN file

const {dmnRunService} = require("@adinsure/runtime");
const {ChronoUnit, LocalDate} = require('@js-joda/core');
const {getTotalVehicleValuePlusUpgrades} = require("@config-triglav-si/i-motor/component/Vehicle/lib/VehicleUtils"); // VehicleVehicleUtils

module.exports = {
    MapObjectAttributes: function(input) { return dmnRunService.runService(input, service_MapObjectAttributes);}, 
};

const service_MapObjectAttributes = {
    "decisions": {
        "ObjectVehicleAttributes": {
            expression(context) { 
                return dmnRunService.evaluateContextExpression(context, (context) => {
                    return(
                        context["empty"] = (
                            ({})
                        ), 
                        context["driverData"] = (
                            context["body"]["insuredObject"] && context["body"]["insuredObject"]["driverData"] || context["empty"]
                        ),
                        dmnRunService.evaluateContextExpression(context, (context) => {
                        return(
                            context["ownerDateOfBirth"] = (
                                context["driverData"]["driver"] && context["driverData"]["driver"]["dateOfBirth"]
                            ), 
                            context["safeDriveCourseCompleted"] = (
                                context["driverData"]["safeDriveCourseCompleted"]
                            ), 
                            context["duiSurcharge"] = (
                                context["driverData"]["duiSurcharge"]
                            ), 
                            context["youngFamily"] = (
                                context["driverData"]["youngFamily"] && context["driverData"]["youngFamily"]["isSelected"]
                            ), 
                            context["drajvCode"] = (
                                context["driverData"]["drajvCode"]
                            ), 
                            context["drajvCodeValidity"] = (
                                context["driverData"]["drajvCodeValidity"]
                            ), 
                            context["tkbClass"] = (
                                context["commonBody"]["attributes"] && context["commonBody"]["attributes"]["tkbClass"]
                            ), 
                            context["vehicleValue"] = (
                                context["VehicleValueTotal"]
                            ), 
                            context["pastYearDrivenMileage"] = (
                                context["PastYearDrivenMileage"]
                            ),
                            undefined)
                }))
                });
            },
            requiredDecisions: ["VehicleValueTotal","PastYearDrivenMileage"]
        },
        "VehicleValueTotal": {
            expression(context) { 
                
                                return getTotalVehicleValuePlusUpgrades(context.attributes);
                            
            },
            requiredDecisions: []
        },
        "ObjectAttributes": {
            expression(context) { 
                return (
                        (context["attributes"]["objectType"] == "Vehicle" ? context["ObjectVehicleAttributes"] : ({}))
                    );
            },
            requiredDecisions: ["ObjectVehicleAttributes"]
        },
        "MapObjectAttributes": {
            expression(context) { 
                return dmnRunService.evaluateContextExpression(context, (context) => {
                    return(
                        context["attributes"] = (
                            context["ObjectAttributes"]
                        ),
                        undefined)
                });
            },
            requiredDecisions: ["ObjectAttributes"]
        },
        "PastYearDrivenMileage": {
            expression(context) { 
                
                                if(context.attributes.objectSubtype == "VehicleTruck") {
                	return context.attributes.pastYearDrivenMileage
                } 
                else if (context.attributes.objectSubtype == "VehicleCar" && context.attributes.lastMileage !== undefined) {
                	return context.attributes.mileage - context.attributes.lastMileage
                }
                            
            },
            requiredDecisions: []
        }
    },
    "outputDecisions": ["MapObjectAttributes"],
    "unboxOutput": true
};
