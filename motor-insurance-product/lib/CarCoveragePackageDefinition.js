/* eslint-disable */
// This file was autogenerated from DMN file

const {dmnRunService} = require("@adinsure/runtime");
const {ChronoUnit, LocalDate} = require('@js-joda/core');

module.exports = {
    CarCoveragePackageDefinition: function(input) { return dmnRunService.runService(input, service_CarCoveragePackageDefinition);}, 
};

const service_CarCoveragePackageDefinition = {
    "decisions": {
        "CarCoveragePackageDefinition": {
            expression(context) { 
                return dmnRunService.applyHitPolicy("UNIQUE", "", 
                    [
                        { condition: context["packageName"] == "Small", outputs: {"mtpl": true, "mtplPlus": true, "casco": false, "combinationB": false, "combinationD": false, "combinationE": false, "combinationH": false, "combinationJ": false, "combinationK": false, "cascoCrashBasic": false, "cascoCrashPlus": false, "carAssistance": false, "legalProtection": false, "carAndLegalProtection": false, "accidentInsurance": false} },
                        { condition: context["packageName"] == "CcSmall", outputs: {"mtpl": true, "mtplPlus": true, "casco": false, "combinationB": false, "combinationD": false, "combinationE": false, "combinationH": false, "combinationJ": false, "combinationK": false, "cascoCrashBasic": true, "cascoCrashPlus": false, "carAssistance": false, "legalProtection": false, "carAndLegalProtection": false, "accidentInsurance": false} },
                        { condition: context["packageName"] == "CcLarge", outputs: {"mtpl": true, "mtplPlus": true, "casco": false, "combinationB": false, "combinationD": false, "combinationE": false, "combinationH": false, "combinationJ": false, "combinationK": false, "cascoCrashBasic": false, "cascoCrashPlus": true, "carAssistance": false, "legalProtection": false, "carAndLegalProtection": false, "accidentInsurance": false} },
                        { condition: context["packageName"] == "Large", outputs: {"mtpl": true, "mtplPlus": true, "casco": true, "combinationB": true, "combinationD": false, "combinationE": false, "combinationH": false, "combinationJ": false, "combinationK": true, "cascoCrashBasic": false, "cascoCrashPlus": false, "carAssistance": false, "legalProtection": false, "carAndLegalProtection": false, "accidentInsurance": false} },
                        { condition: context["packageName"] == "LargePlus", outputs: {"mtpl": true, "mtplPlus": true, "casco": true, "combinationB": true, "combinationD": true, "combinationE": true, "combinationH": true, "combinationJ": true, "combinationK": true, "cascoCrashBasic": false, "cascoCrashPlus": false, "carAssistance": true, "legalProtection": true, "carAndLegalProtection": true, "accidentInsurance": true} },
                        { condition: context["packageName"] == "Comfort", outputs: {"mtpl": true, "mtplPlus": true, "casco": true, "combinationB": true, "combinationD": false, "combinationE": false, "combinationH": false, "combinationJ": false, "combinationK": true, "cascoCrashBasic": false, "cascoCrashPlus": false, "carAssistance": true, "legalProtection": false, "carAndLegalProtection": true, "accidentInsurance": false} },
                        { condition: context["packageName"] == "ComfortPlus", outputs: {"mtpl": true, "mtplPlus": true, "casco": true, "combinationB": true, "combinationD": true, "combinationE": true, "combinationH": true, "combinationJ": true, "combinationK": true, "cascoCrashBasic": false, "cascoCrashPlus": false, "carAssistance": true, "legalProtection": false, "carAndLegalProtection": true, "accidentInsurance": true} },
                        { condition: true, outputs: {"mtpl": false, "mtplPlus": false, "casco": false, "combinationB": false, "combinationD": false, "combinationE": false, "combinationH": false, "combinationJ": false, "combinationK": false, "cascoCrashBasic": false, "cascoCrashPlus": false, "carAssistance": false, "legalProtection": false, "carAndLegalProtection": false, "accidentInsurance": false} },
                    ]
                        .filter(r => r.condition).map(r => r.outputs)
                );
            },
            requiredDecisions: []
        }
    },
    "outputDecisions": ["CarCoveragePackageDefinition"],
    "unboxOutput": true
};
